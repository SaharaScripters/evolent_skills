name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies and build UI
      run: |
        cd web
        pnpm install
        pnpm run build

    - name: Prepare release package
      run: |
        mkdir -p release-package/evolent_skills/web/build
        cp -r web/build/* release-package/evolent_skills/web/build/
        find . -maxdepth 1 -mindepth 1 ! -name 'web' ! -name '.git' ! -name '.github' ! -name 'release-package' -exec cp -r {} release-package/evolent_skills/ \;

    - name: Zip the release package
      run: |
        cd release-package
        zip -r ../evolent_skills.zip evolent_skills
        cd ..

    - name: Generate release notes
      id: generate_notes
      run: |
        RELEASE_NOTES=$(git log $(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1))..$(git describe --tags --abbrev=0) --pretty=format:'* %h - %s' | grep -v 'Merge branch')
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
        echo "$RELEASE_NOTES" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        body: ${{ env.RELEASE_NOTES }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./evolent_skills.zip
        asset_name: evolent_skills.zip
        asset_content_type: application/zip
